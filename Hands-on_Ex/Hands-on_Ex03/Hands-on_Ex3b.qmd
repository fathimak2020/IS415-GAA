---
title: "Hands-on Exercise 3b: 2nd Order Spatial Point Patterns Analysis Methods"
execute: 
  warning: false
date: "`r format(Sys.Date(), '%Y-%m-%d')`"
---

# 3.1 Overview

Spatial Point Pattern Analysis involves examining the pattern or distribution of a group of points on a surface. These points may represent:

-   Occurrences like crime incidents, traffic accidents, or the onset of diseases

-   Business-related points such as coffee shops and fast-food outlets, or essential services like childcare and eldercare facilities.

Using appropriate functions of spatstat, this hands-on exercise aims to discover the spatial point processes of childcare centres in Singapore.

The specific questions we aim to address are:

-   Is there a random distribution of childcare centers across Singapore?

-   If not, the subsequent question becomes identifying the areas where there is a higher concentration of childcare centers.

    *\*\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_*\*

# 3.9 **Second-order Spatial Point Patterns Analysis**

# 3.10 **Analysing Spatial Point Process Using G-Function**

The G function measures the distribution of the distances from an arbitrary event to its nearest event. In this section, you will learn how to compute G-function estimation by using [*Gest()*](https://rdrr.io/cran/spatstat/man/Gest.html) of **spatstat** package. You will also learn how to perform monta carlo simulation test using [*envelope()*](https://rdrr.io/cran/spatstat/man/envelope.html) of **spatstat** package.

## **3.10.1 Choa Chu Kang Planning Area**

## 3.10.1.1 Computing G-function Estimation

The code chunk below is used to compute G-function using *`Gest()`* of **spatat** package.

```{r}
G_CK = Gest(childcare_ck_ppp, correction = "border") plot(G_CK, xlim=c(0,500))
```

## 3.10.1.2 Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

-   Ho = The distribution of childcare services at Choa Chu Kang are **randomly distributed**.

-   H1= The distribution of childcare services at Choa Chu Kang are **not randomly distributed.**

-   The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.

Monte Carlo test with G-function

```{r}
G_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)
```

```{r}
plot(G_CK.csr)
```

## **3.10.2 Tampines Planning Area**

## 3.10.2.1 Computing G-function Estimation

```{r}
G_tm = Gest(childcare_tm_ppp, correction = "best") plot(G_tm)
```

## 3.10.2.2 Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

-   Ho = The distribution of childcare services at Tampines are **randomly distributed.**

-   H1= The distribution of childcare services at Tampines are **not randomly distributed.**

-   The null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.

The code chunk below is used to perform the hypothesis testing.

```{r}
G_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = "all", nsim = 999)
```

```{r}
plot(G_tm.csr)
```

# **3.11 Analysing Spatial Point Process Using F-Function**

The F function estimates the empty space function F(r) or its hazard rate h(r) from a point pattern in a window of arbitrary shape. In this section, you will learn how to compute F-function estimation by using [*`Fest()`*](https://rdrr.io/cran/spatstat/man/Fest.html) of **spatstat** package. You will also learn how to perform monta carlo simulation test using [*`envelope()`*](https://rdrr.io/cran/spatstat/man/envelope.html) of **spatstat** package.

## **3.11.1 Choa Chu Kang Planning Area**

## 3.11.1.1 Computing F-function Estimation

The code chunk below is used to compute F-function using *`Fest()`* of **spatat** package.

```{r}
F_CK = Fest(childcare_ck_ppp) plot(F_CK)
```

## **3.11.2 Performing Complete Spatial Randomness Test**

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

-   Ho = The distribution of childcare services at Choa Chu Kang are **randomly distributed.**

-   H1= The distribution of childcare services at Choa Chu Kang are **not randomly distributed.**

-   The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.

Monte Carlo test with F-function

```{r}
F_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)
```

```{r}
plot(F_CK.csr)
```

## **3.11.3 Tampines Planning Area**

## 3.11.3.1 Computing F-function Estimation

Monte Carlo test with F-function

```{r}
F_tm = Fest(childcare_tm_ppp, correction = "best") plot(F_tm)
```

## 3.11.3.2 Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

-   Ho = The distribution of childcare services at Tampines are **randomly distributed.**

-   H1= The distribution of childcare services at Tampines are **not randomly distributed.**

-   The null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.

The code chunk below is used to perform the hypothesis testing.

```{r}
F_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = "all", nsim = 999)
```

```{r}
plot(F_tm.csr)
```

# **3.12 Analysing Spatial Point Process Using K-Function**

K-function measures the number of events found up to a given distance of any particular event. In this section, you will learn how to compute K-function estimates by using [*`Kest()`*](https://rdrr.io/cran/spatstat/man/Kest.html) of **spatstat** package. You will also learn how to perform monta carlo simulation test using *`envelope()`* of spatstat package.

## **3.12.1 Choa Chu Kang Planning Area**

## 3.12.1.1 Computing K-function Estimate

```{r}
K_ck = Kest(childcare_ck_ppp, correction = "Ripley")
plot(K_ck, . -r ~ r, ylab= "K(d)-r", xlab = "d(m)")
```

## 3.12.1.2 Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

-   Ho = The distribution of childcare services at Choa Chu Kang are **randomly distributed.**

-   H1= The distribution of childcare services at Choa Chu Kang are **not randomly distributed.**

-   The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.

The code chunk below is used to perform the hypothesis testing.

```{r}
K_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(K_ck.csr, . - r ~ r, xlab="d", ylab="K(d)-r")
```

## **3.12.2 Tampines Planning Area**

## 3.12.2.1 Computing K-function Estimation

```{r}
K_tm = Kest(childcare_tm_ppp, correction = "Ripley")
plot(K_tm, . -r ~ r, ylab= "K(d)-r", xlab = "d(m)", xlim=c(0,1000))
```

## 3.12.2.2 Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

-   Ho = The distribution of childcare services at Tampines are **randomly distributed.**

-   H1= The distribution of childcare services at Tampines are **not randomly distributed.**

-   The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.

The code chunk below is used to perform the hypothesis testing.

```{r}
K_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(K_tm.csr, . - r ~ r, xlab="d", ylab="K(d)-r", xlim=c(0,500))
```

# **3.13 Analysing Spatial Point Process Using L-Function**

In this section, you will learn how to compute L-function estimation by using [*`Lest()`*](https://rdrr.io/cran/spatstat/man/Lest.html) of **spatstat** package. You will also learn how to perform monta carlo simulation test using *`envelope()`* of spatstat package.

## **3.13.1 Choa Chu Kang Planning area**

## 3.13.1.1 Computing L Function Estimation

```{r}
L_ck = Lest(childcare_ck_ppp, correction = "Ripley")
plot(L_ck, . -r ~ r, ylab= "L(d)-r", xlab = "d(m)")
```

## 3.13.1.2 Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

-   Ho = The distribution of childcare services at Choa Chu Kang are **randomly distributed.**

-   H1= The distribution of childcare services at Choa Chu Kang are **not randomly distributed.**

-   The null hypothesis will be rejected if p-value if smaller than alpha value of 0.001.

The code chunk below is used to perform the hypothesis testing.

```{r}
L_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(L_ck.csr, . - r ~ r, xlab="d", ylab="L(d)-r")
```

## **3.13.2 Tampines Planning Area**

## 3.13.2.1 Computing L-function Estimation

```{r}
L_tm = Lest(childcare_tm_ppp, correction = "Ripley")
plot(L_tm, . -r ~ r, ylab= "L(d)-r", xlab = "d(m)", xlim=c(0,1000))
```

## 3.13.2.2 Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

-   Ho = The distribution of childcare services at Tampines are **randomly distributed.**

-   H1= The distribution of childcare services at Tampines are **not** **randomly distributed.**

-   The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.

The code chunk below will be used to perform the hypothesis testing.

```{r}
L_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)
```

Then, plot the model output by using the code below.

```{r}
plot(L_tm.csr, . - r ~ r, xlab="d", ylab="L(d)-r", xlim=c(0,500))
```
