---
title: "In-class Exercise 4: Spatial Weights and Application: sf methods"
format: 
  html:
    code-fold: true
    code-summary: "Show the code"
    #toc: false
execute: 
  eval: false
  echo: true
  freeze: true
  warning: false
editor: visual
---

```{r}
pacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)
```

```{r}
hunan <- st_read(dsn = "data/geospatial", 
                 layer = "Hunan")
```

```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

```{r}
hunan <- left_join(hunan,hunan2012)%>%
  select(1:4, 7, 15)
```

```{r}
#| fig: 
basemap <- tm_shape(hunan) +
  tm_polygons() +
  tm_text("NAME_3", size=0.5) #size of text 

gdppc <- qtm(hunan, "GDPPC") #qtm is a faster way to plot maps 
tmap_arrange(basemap, gdppc, asp=1, ncol=2) #organise both maps into 1 row 2 columns
```

```{r}
plot(hunan$geometry, border="lightgrey")
plot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= "red")
```

```{r}
hunan_sp <-hunan %>%
  as_Spatial()
```

```{r}
#gwstat <- gwss(data = hunan_sp,
         #      vars = "GDPPC",
         #      bw = 6,
          #     kernel = "bisquare",
           #    adaptive = TRUE,
           #    longlat = T)
```

```{r}
wm_q <- poly2nb(hunan, queen =TRUE)
summary(wm_q)
#nonzero links = neighbors
#1st row is no of neighbors
#2nd row is no of geographical areas
```

```{r}
longitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])
latitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])
```

```{r}
coords <- cbind(longitude, latitude)
#binds without any identifiers
```

```{r}
wm_r <- poly2nb(hunan, queen=FALSE)
summary(wm_r)
```

```{r}
par(mfrow=c(1,2))
plot(hunan$geometry, border="lightgrey", main="Queen Contiguity")
plot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= "red")
plot(hunan$geometry, border="lightgrey", main="Rook Contiguity")
plot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = "red")
```

```{r}
#coords <- coordinates(hunan)
k1 <- knn2nb(knearneigh(coords))
k1dists <- unlist(nbdists(k1, coords, longlat = TRUE))
summary(k1dists)
```

```{r}
rswm_q <- nb2listw(wm_q, style="W", zero.policy = TRUE)
rswm_q
```

```{r}
b_weights <- lapply(wm_q, function(x) 0*x + 1)
b_weights2 <- nb2listw(wm_q, 
                       glist = b_weights, 
                       style = "B")
b_weights2
```

```{r}
lag_sum <- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))
lag.res <- as.data.frame(lag_sum)
colnames(lag.res) <- c("NAME_3", "lag_sum GDPPC")
```

```{r}
hunan <- left_join(hunan, lag.res)
```

```{r}
gdppc <- qtm(hunan, "GDPPC")
lag_sum_gdppc <- qtm(hunan, "lag_sum GDPPC")
tmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)
```
