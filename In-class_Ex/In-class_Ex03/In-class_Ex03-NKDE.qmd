---
title: "In-class Exercise 3: Network Kernel Density Estimation"
format: 
  html:
    code-fold: true
    code-summary: "Show the code"
    #toc: false
execute: 
  eval: false
  echo: true
  freeze: true
  warning: false
editor: visual
---

```{r}
pacman::p_load(sf, spNetwork, tmap, classInt, viridis, tidyverse)
```

##Data Import and Preparation

```{r}
network <- st_read(dsn="data/geospatial", 
                   layer="Punggol_St")

childcare <- st_read(dsn="data/geospatial",
                     layer="Punggol_CC")
```

```{r}
tmap_mode('view') #interactive
tm_shape(childcare) + 
  tm_dots() + 
  tm_shape(network) +
  tm_lines()
tmap_mode('plot')
```

```{r}
lixels <- lixelize_lines(network, 
                         750, 
                         mindist = 375) 
```

```{r}
samples <- lines_center(lixels)
```

```{r}
densities <- nkde(network, 
                  events = childcare,
                  w = rep(1,nrow(childcare)),
                  samples = samples,
                  kernel_name = "quartic",
                  bw = 300, 
                  div= "bw", 
                  method = "simple", 
                  digits = 1, 
                  tol = 1,
                  grid_shape = c(1,1), 
                  max_depth = 8,
                  agg = 5, #we aggregate events within a 5m radius (faster calculation)
                  sparse = TRUE,
                  verbose = FALSE)
```

```{r}
#samples$density <- samples$density*1000
#lixels$density <- lixels$density*1000
```

```{r}
#tmap_mode('view')
#tm_shape(lixels)+
  #tm_lines(col="density ")+
#tm_shape(childcare)+
  #tm_dots()
#tmap_mode('plot')
```
