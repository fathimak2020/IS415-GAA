---
title: "In-class Exercise 3: Kernel Density Estimation"
format: 
  html:
    code-fold: true
    code-summary: "Show the code"
    #toc: false
execute: 
  eval: true
  echo: true
  warning: false
editor: visual
---

## Installing Maptools

```{r}
#| eval: false
install.packages("maptools", repos = "https://packagemanager.posit.co/cran/2023-10-13")
```

```{r}
pacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse)
```

##Spatial Data Wrangling

```{r}
childcare_sf <- st_read("data/geospatial/ChildCareServices.geojson")%>%
  st_transform(crs = 3414)
mpsz_sf <- st_read(dsn= "data/geospatial",
                   layer = "MP14_SUBZONE_WEB_PL")
```

```{r}
```

## creating costal outline

```{r}
sg_sf <- mpsz_sf %>%
  st_union()
```

```{r}
plot(sg_sf)
```

## Importing the spatial

## Mapping the geospaital

## Geospatial Data wrangling

## creating PPP object: sf method

```{r}
childcare_ppp <- as.ppp(childcare_sf)
#as.ppp is only for sf layer not sp
```

```{r}
summary(childcare_ppp)
```

```{r}
plot(childcare_ppp)
```

## Handling duplicated data

```{r}
any(duplicated(childcare_ppp))
```

## Creating owin object

```{r}
sg_owin <- as.owin(sg_sf)
```

```{r}
childcareSG_ppp = childcare_ppp[sg_owin]
```

```{r}
summary(childcareSG_ppp)

```

```{r}
pg <- mpsz_sf %>% filter(PLN_AREA_N == "PUNGGOL")
tm <- mpsz_sf %>% filter(PLN_AREA_N == "TAMPINES")
ck <- mpsz_sf %>% filter(PLN_AREA_N == "CHOA CHU KANG")
jw <- mpsz_sf %>% filter(PLN_AREA_N == "JURONG WEST")
```

```{r}
plot (pg, main ="Ponggol")
plot (tm, main ="Tampines")
plot (ck, main ="Choa Chu Kang")
plot (jw, main ="Jurong West")
```

## Combining point

## First-order spatal

## Kernel Density Estimation

## Computing kernel

## Rescaling KDE

## working with different
