{
  "hash": "2149d4482514073418cf1cce30107541",
  "result": {
    "markdown": "---\ntitle: \"In-class Exercise 2: R for Geospatial Data Science\"\nformat: \n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n    #toc: false\nexecute: \n  eval: false\n  echo: true\n  warning: false\n  freeze: true\neditor: visual\n---\n\n\n# Getting Started\n\n## Load R packages\n\nIn this in-class exercise, the following R packages will be used:\n\n-   `arrow` to read Parquet files\n-   `lubridate` for working with date-time data\n-   tidyverse\n-   `tmap` for interactive maps\n-   sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(arrow, lubridate, tidyverse, tmap, sf)\n```\n:::\n\n\n# Importing Grab-Posisi Dataset\n\nUsing `read_parquet()` to import Grab-Posisi dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_parquet(\"data/GrabPosisi/part-00000.parquet\")\n#../../data..\n```\n:::\n\n\nThe field 'pingtimestamp' is not in proper date-time format. The following code chunk converts the data type of pingtimestamp from character to date-time format. Instead of using the mutuate function, we overwrite the df.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$pingtimestamp <- as_datetime(df$pingtimestamp)\n```\n:::\n\n\n## Extracting trips starting locations\n\n-   extract trips origin locations\n-   derive new columns : weekday, starting hour and day of month\n\n\n::: {.cell}\n\n```{.r .cell-code}\norigin_df <- df %>%\n  group_by(trj_id) %>%\n  arrange (pingtimestamp) %>%\n  filter(row_number()==1) %>% #first row gives origin location \n  mutate(weekday = wday(pingtimestamp, #define workday\n                        label = TRUE,\n                        abbr = TRUE), #Monday = MON \n        start_hr = factor(hour(pingtimestamp)),\n        day = factor(mday(pingtimestamp))) #to change to ordinal scale\n```\n:::\n\n\n## Extracting trips ending locations\n\n-   extract trips destination locations\n-   derive new columns: weekday, ending hour and day of month\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndest_df <- df %>%\n  group_by(trj_id) %>%\n  arrange(desc(pingtimestamp)) %>% #function from dplyr\n  filter(row_number()==1) %>% #first row after arranging in desc order gives dest  \n  mutate(weekday = wday(pingtimestamp, #define workday\n                        label = TRUE,\n                        abbr = TRUE), #Monday = MON \n        end_hr = factor(hour(pingtimestamp)),\n        day = factor(mday(pingtimestamp))) #to change to ordinal scale\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n#Import Data for future use\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#origin_df <-read_rds(data/rds/origin_df.rds)\n#dest_df <-read_rds(data/rds/dest_df.rds)\n```\n:::\n\n\n## Visualising frequency distribution\n\n# Converting into `sf` tibble data.frame\n\n# Visualising as point symbol map\n\n# Importing Masterplan 2019 Planning Subzone Boundary\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}